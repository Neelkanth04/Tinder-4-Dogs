name: Scrape Dogs Data

on:
  schedule:
    # Run every 30 minutes
    - cron: '*/30 * * * *'
  # Allow manual trigger
  workflow_dispatch:

concurrency:
  group: scrape-dog-data
  cancel-in-progress: true

jobs:
  scrape:
    runs-on: ubuntu-latest
    timeout-minutes: 15  # Add timeout

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Fetch all history for proper git operations

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run scraper with retry
      id: scrape
      run: |
        max_attempts=3
        attempt=1
        while [ $attempt -le $max_attempts ]; do
          echo "Attempt $attempt of $max_attempts"
          if node scrape.js; then
            echo "Scraping completed successfully"
            exit 0
          else
            echo "Scraping failed on attempt $attempt"
            if [ $attempt -eq $max_attempts ]; then
              echo "All attempts failed"
              exit 1
            fi
            attempt=$((attempt + 1))
            sleep 30  # Wait 30 seconds before retry
          fi
        done

    - name: Check for changes
      id: git-check
      run: |
        git config --global user.name 'GitHub Actions'
        git config --global user.email 'actions@github.com'
        
        git add src/app/dogs.json
        
        if git diff --staged --quiet; then
          echo "No changes to commit"
          echo "has_changes=false" >> $GITHUB_OUTPUT
        else
          echo "Changes detected"
          echo "has_changes=true" >> $GITHUB_OUTPUT
          
          # Get current date and dog count
          dog_count=$(jq 'length' src/app/dogs.json)
          date=$(date '+%Y-%m-%d %H:%M:%S')
          
          # Create commit message
          git commit -m "Update dog data [skip ci]

          - Updated at: $date
          - Total dogs: $dog_count
          - Auto-updated by GitHub Actions"
        fi

    - name: Push changes
      if: steps.git-check.outputs.has_changes == 'true'
      run: |
        git push origin main
